---
title: Initial Setup
execute:
  eval: false
---

## Overview

This is the setup required to contribute to our Cookbook. Instructions are for the command line; see [quarto.org](https://quarto.org) for equivalents in R and for the most up-to-date and more detailed information.

## Install Quarto

### Option 1: Install Quarto locally on your machine

First, in your internet browser, go to the very latest version of the Quarto command line interface (CLI):

<https://github.com/quarto-dev/quarto-cli/releases/latest>

Download Quarto by clicking on the file appropriate for your operating system:

-   **Linux**: amd64.deb

-   **Mac**: macos.pkg

-   **Windows**: win.msi

Once download is complete, follow the installation prompts on your computer like you do for other software.

*Note for Mac users: If you do not have administrative privileges, please select "Install for me only" during the Destination Selection installation step (you will first click on "Change Install Location" at the Installation Type step).*


### Check install

Finally, check to make sure Quarto installed properly. Open a command line terminal and type:

``` {.bash}
quarto check install
```

::: {.callout-note collapse="true"}
## Additional checks

You can also run:

-   `quarto check knitr` to locate R, verify we have the rmarkdown package, and do a basic render
-   `quarto check jupyter` to locate Python, verify we have Jupyter, and do a basic render
-   `quarto check` to run all of these checks together
:::

From quarto.org: If you need to install a version more recent than the latest release, see the documentation on installing the [Development Version](https://quarto.org/docs/getting-started/installation.html#development-version).

### Option 2: Install Quarto in a docker container

If installing quarto locally is not an option, you can install it inside a container using the
following `Dockerfile`:

```{r, eval=FALSE}
#| fold: true
#| summary: "Show the Dockerfile"

##############################
# This Dockerfile installs quarto and then runs quarto serve against the
# internal /home/quarto/to_serve.
#
# BUILD
# -----
# To build this container, run
#
#     docker build -t quarto_serve .
#
# Add the --no-cache option to force docker to build fresh and get the most
# recent version of quarto.
#
#
# RUN
# ---
# 1. Find the directory you want quarto to serve. Let's call this /PATH/TO/earthdata-cloud-cookbook.
# 2. Run docker:
#
#     docker run --rm -it -p 4848:4848 -v /PATH/TO/earthdata-cloud-cookbook:/home/quarto/to_serve quarto_serve
#
# 3. Open your browser and go to http://127.0.0.1:4848/
#
##############################

FROM ubuntu:hirsute

######
# Install some command line tools we'll need
######
RUN apt-get update
RUN apt-get -y install wget
RUN apt-get -y install gdebi-core
RUN apt-get -y install git


######
# Install quarto (https://quarto.org/)
######

# This is a quick and dirty way of getting the newest version number from
# https://github.com/quarto-dev/quarto-cli/releases/latest. What's happening is
# we're pulling the version number out of the redirect URL. This will end up
# with QVER set to something like 0.2.11.
RUN QVER=`wget --max-redirect 0 https://github.com/quarto-dev/quarto-cli/releases/latest 2>&1 | grep "Location" | sed 's/L.*tag\/v//' | sed 's/ .*//'` \
    && wget -O quarto.deb "https://github.com/quarto-dev/quarto-cli/releases/download/v$QVER/quarto-$QVER-amd64.deb"
RUN gdebi -n quarto.deb

# Run this to make sure quarto installed correctly
RUN quarto check install


######
# Create a non-root user called quarto
######
RUN useradd -ms /bin/bash quarto
USER quarto
RUN mkdir /home/quarto/to_serve
WORKDIR /home/quarto/to_serve


######
# Start quarto serve
######

CMD quarto serve --no-browse --host 0.0.0.0 --port 4848
```


## Clone Cookbook from GitHub

Now clone our Cookbook and make it your current directory.

``` {.bash}
git clone https://github.com/NASA-Openscapes/earthdata-cloud-cookbook
cd earthdata-cloud-cookbook
```

<!---TODO: Offer GitHub setup instructions: writeup GitHub Clinic --->

## Build Cookbook!

You should now be able to serve our Cookbook from the `earthdata-cloud-cookbook` directory.

``` {.bash}
quarto serve
```

This will open the Cookbook as a new tab in your browser. Now you're all set to contribute to the Cookbook! Read about how in the next chapter.
