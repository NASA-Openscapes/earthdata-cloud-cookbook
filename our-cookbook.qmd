---
title: "Our Cookbooks"
---

## How to use our Cookbooks

Our Cookbooks are places to learn, share, and experiment with NASA Earthdata on the Cloud. We know this has a lot of moving parts, and we are iterating as we go, and welcome feedback and contributions.

You are currently reading the **Earthdata Cloud Cookbook**, which is a place for common approaches for NASA Earthdata in the Cloud. It also provides visibility and discovery for other Cookbooks by themes, whether that be by Distributed Active Archive Centers (DAACs), Missions, or scientific topic. Other Cookbooks in our "kitchen": 

- [**Physical Oceanography Distributed Active Archive Center (PO.DAAC) Cookbook**](https://podaac.github.io/tutorials/)
- [**Mission-specific Cookbook for the Atmospheric Science Data Center (ASDC)**](https://nasa.github.io/ASDC_Data_and_User_Services/)
- [**National Snow and Ice Data Center (NSIDC) Data Tutorials**](https://github.com/nsidc/NSIDC-Data-Tutorials) *Cookbook format coming soon*

## Cookbooks structure

*This structure is shared across Cookbooks, although there is variation.*

**How To** building blocks and **Tutorials** that connect these building blocks through an example research question and specific data. How To guides and Tutorials are stable approaches we've developed and used to teach; they have been iterated and improved through feedback from researchers during [events we've led](https://nasa-openscapes.github.io/earthdata-cloud-cookbook/tutorials/). We also share work **In Development**: primarily lessons and other works-in-progress that we're developing.

Working with NASA Earthdata in the Cloud means using a combination of software, tools, many of which require coding and are unfamiliar when we first get started. This is true for us all; we're all coming with different skills and backgrounds and you're not alone as we all learn these new technologies and workflows. We have found it helpful to have a [growth mindset](https://www.youtube.com/watch?v=_X0mgOOSpLU&t=11s&ab_channel=TED) - these approaches are new and we don't know how to do them ***yet***. Please, don't struggle alone - know that we're all in this together as part of the open source community learning and co-creating together as we migrate our research to the Cloud.

You're able to reuse any code in this book, adapting it for your own purposes. All chapters in the book are a combination of narrative, links, code, and outputs --- and underlying each chapter is a file type that you can access on [NASA-Openscapes GitHub](https://github.com/NASA-Openscapes/earthdata-cloud-cookbook) (linked on the left navbar and right margin of each page): Markdown (`.md`), Jupyter (`.ipynb`), RMarkdown (`.rmd`) or Quarto (`.qmd`) files.

We will also be adding citations throughout so that you can easily credit the NASA Openscapes Mentors who created them.

## Get Started

So, you want to get started working with NASA Earthdata in the cloud? You've come to the right place. Here you'll find resources that can be considered precursors to the how to's, tutorials, and other guidance you will find across our Cookbook.

### Earthdata Login

To access NASA Earthdata, whether through your web browser or the cloud, you must first register for an Earthdata Login (EDL) user profile. Once registered, you can use your login credentials to get data through multiple access points. Read about EDL and get registered by following the directions on the [Welcome to Earthdata Login](https://urs.earthdata.nasa.gov/documentation/for_users/welcome) page.

### Coding Essentials

To access the cloud programmatically we must have a basic understanding of how to code using common, cloud-relevant languages. Most scientists who work with Earth data use either Python or R already, so we focus on those languages. Python and R are both open-source programming languages widely used in web applications, software development, data science, and machine learning. They are popular because they are free, efficient, have online resources to learn, and can run on most platforms. If you are new to coding, we recommend you participate in a [Carpentries Workshop](https://carpentries.org/workshops/) or use open-source resources to teach yourself.

### Bash & Git

Cloud services often are connected to and operated through Bash, a command-line interface and language you'll see called the terminal, the command line, or the shell. Git is a commonly used version control system that is available through Bash. Version control is important for data collaboration because it allows changes by multiple people to be tracked and merged into one source.

-   [**The Unix Shell**](https://swcarpentry.github.io/shell-novice/) These lessons will introduce you the shell, a fundamental tool for performing a wide range of computing tasks.

-   [**Version Control with Git**](https://swcarpentry.github.io/git-novice/) This tutorial will introduce you to Git, a popular open source distributed version control system.

### Python

-   [**The Python Tutorial**](https://docs.python.org/3/tutorial/) This tutorial introduces the reader informally to the basic concepts and features of the Python language and system.

-   [**Pythia Foundations**](https://foundations.projectpythia.org/landing-page.html) This book is intended to educate the reader on the essentials for using the Scientific Python Ecosystem (SPE): a collection of open source Python packages that support analysis, manipulation, and visualization of scientific data.

### R

-   [**R for Excel Users**](https://rstudio-conf-2020.github.io/r-for-excel/) This course is a friendly intro to becoming a modern R user, full of tidyverse, RMarkdown, GitHub, collaboration, and reproducibility.

-   [**R for Data Science**](https://r4ds.hadley.nz/) This book will teach you how to do data science with R, including how to get your data into R, get it into the most useful structure, transform it, and visualize.

### JupyterHubs

- [NOAA Fisheries Open Science - Hackdays Skills](https://nmfs-opensci.github.io/NMFSHackDays-2025/topics-skills/) This resource offers introduction, skills, and workflows for using JupyterHubs, as well as links to guest presentations at regular Hackhours on topics of JupyterHubs, computation, and machine learning.

### Cloud-Native Geospatial

- [**Cloud-Optimized Geospatial Formats Guide**](https://guide.cloudnativegeo.org) This guide helps answer the question "why cloud?" and / or if you wish to learn more about cloud-native geospatial formats.

*For advanced coding guidance, see our How To's, Tutorials, and Appendix.*
